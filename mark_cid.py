import pandas as pd
import numpy as np
import zipfile
import streamlit as st
from datetime import date

#  qual exame n√£o pode ser feito por  um diab√©tico?

st.set_page_config(
    page_title="Blue AI - Klivo",
    page_icon="üî¨"
)

zf_2 = zipfile.ZipFile('df_porto.zip') 

@st.cache_data() #Ler base de procedimentos por benefici√°rios
def get_data():
	return pd.read_csv(zf_2.open("df_porto.csv"))
df = get_data()

st.title('üî¨ Teste de classifica√ß√£o de diabetes por procedimentos passados')
st.caption('Feito com üß† por [Blue AI](https://blueai.com.br/)')
Intro, Group_1, Group_2, Group_3, Docs = st.tabs(["Intro", "Grupo de teste 1", "Grupo de teste 2", "Grupo de teste 3", "Documenta√ß√£o"])

df['id_pessoa'] = df['id_pessoa'].astype(str)

with Intro:
	st.info('Este app demonstra classifica√ß√µes de diabetes para benefici√°rios de planos de sa√∫de atrav√©s do hist√≥rico de procedimentos realizados por cada um. Comece selecionando um grupo de teste acima para avaliar as respectivas classifica√ß√µes, anote os seus coment√°rios, sugest√µes e principalmente os seus feedbacks. **Toda intelig√™ncia artificial um dia come√ßou a partir de uma intelig√™ncia humana, dessa forma, junto com a [Klivo](https://www.klivo.com/), a Blue est√° na segunda vers√£o de um modelo de *machine learning* para diabetes**. \n\n Ainda, na √∫ltima aba acima, voc√™ encontrar√° a descri√ß√£o de vari√°veis e suas combina√ß√µes usadas para a constru√ß√£o do classificador de diabetes, assim como fontes e *benchmarks* de publica√ß√µes cient√≠ficas similares.')

with Group_1:
	df['id_pessoa'].replace({'36651': 'Indiv√≠duo 1', '109256':'Indiv√≠duo 2', '211794':'Indiv√≠duo 3'}, inplace=True)

	# lista_pessoa = ['-']
	# for x in df['id_pessoa'].unique():
	# 	lista_pessoa.append(x)

	# lista_pessoa.sort()

	lista_pessoa = ['Indiv√≠duo 1', 'Indiv√≠duo 2', 'Indiv√≠duo 3']
	pessoa = st.selectbox('Selecione o benefici√°rio para avaliar o seu hist√≥rico:', lista_pessoa, index=0, format_func=str, key="Group_1")

	if pessoa != '-':
		df_aux = df[df['id_pessoa'] == pessoa]

		# visual = st.selectbox('Visualizar:', ['Subgrupos', 'Procedimentos', 'Hist√≥rico'], index=0, format_func=str, key="Group_1_Options")
		
		# if visual == 'Subgrupos':
		# 	st.subheader('Subgrupos √∫nicos:')
		# 	st.table(df_aux['Subgrupo'].unique())
		# elif visual == 'Procedimentos':
		# 	st.subheader('Procedimentos √∫nicos:')
		# 	st.table(df_aux['DescricaoProcedimentoFinal'].unique())
		# elif visual == 'Hist√≥rico':
		st.markdown('\n\n')
		# today = pd.Timestamp("today")
		# df['dt_nascimento'] =  (today - pd.to_datetime(df['dt_nascimento']))/365

		st.write('##### Hist√≥rico completo:')
		st.table(df_aux[['dt_nascimento', 'dt_utilizacao', 'proc_tuss']].sort_values('dt_utilizacao', ascending = False))

	else:
		pass

with Group_2:
	df['id_pessoa'].replace({'48658': 'Indiv√≠duo 4', '49886':'Indiv√≠duo 5', '173960':'Indiv√≠duo 6'}, inplace=True)

	# lista_pessoa = ['-']
	# for x in df['id_pessoa'].unique():
	# 	lista_pessoa.append(x)

	# lista_pessoa.sort()

	lista_pessoa = ['Indiv√≠duo 4', 'Indiv√≠duo 5', 'Indiv√≠duo 6']
	pessoa = st.selectbox('Selecione o benefici√°rio para avaliar o seu hist√≥rico:', lista_pessoa, index=0, format_func=str, key="Group_2")

	if pessoa != '-':
		df_aux = df[df['id_pessoa'] == pessoa]

		# visual = st.selectbox('Visualizar:', ['Subgrupos', 'Procedimentos', 'Hist√≥rico'], index=0, format_func=str, key="Group_2_Options")
		
		# if visual == 'Subgrupos':
		# 	st.subheader('Subgrupos √∫nicos:')
		# 	st.table(df_aux['Subgrupo'].unique())
		# elif visual == 'Procedimentos':
		# 	st.subheader('Procedimentos √∫nicos:')
		# 	st.table(df_aux['DescricaoProcedimentoFinal'].unique())
		# elif visual == 'Hist√≥rico':
		st.markdown('\n\n')
		st.write('##### Hist√≥rico completo:')
		st.table(df_aux[['dt_nascimento', 'dt_utilizacao', 'proc_tuss']].sort_values('dt_utilizacao', ascending = False))

	else:
		pass

with Group_3:
	df['id_pessoa'].replace({'111633': 'Indiv√≠duo 7', '73137':'Indiv√≠duo 8', '83784':'Indiv√≠duo 9'}, inplace=True)

	# lista_pessoa = ['-']
	# for x in df['id_pessoa'].unique():
	# 	lista_pessoa.append(x)

	# lista_pessoa.sort()

	lista_pessoa = ['Indiv√≠duo 7', 'Indiv√≠duo 8', 'Indiv√≠duo 9']
	pessoa = st.selectbox('Selecione o benefici√°rio para avaliar o seu hist√≥rico:', lista_pessoa, index=0, format_func=str, key="Group_3")

	if pessoa != '-':
		df_aux = df[df['id_pessoa'] == pessoa]

		# visual = st.selectbox('Visualizar:', ['Subgrupos', 'Procedimentos', 'Hist√≥rico'], index=0, format_func=str, key="Group_2_Options")
		
		# if visual == 'Subgrupos':
		# 	st.subheader('Subgrupos √∫nicos:')
		# 	st.table(df_aux['Subgrupo'].unique())
		# elif visual == 'Procedimentos':
		# 	st.subheader('Procedimentos √∫nicos:')
		# 	st.table(df_aux['DescricaoProcedimentoFinal'].unique())
		# elif visual == 'Hist√≥rico':
		st.markdown('\n\n')
		st.write('##### Hist√≥rico completo:')
		st.table(df_aux[['dt_nascimento', 'dt_utilizacao', 'proc_tuss']].sort_values('dt_utilizacao', ascending = False))

	else:
		pass

with Docs:
	st.write(
        """
		Para a constru√ß√£o das vari√°veis usamos an√°lise descritiva, incluindo frequ√™ncia, medida de taxa de realiza√ß√£o de um novo procedimento, porcentagem, m√©dia e soma de cada informa√ß√£o descrita na lista abaixo. Ainda, consideremos tamb√©m protocolos retirados de artigos ci√™nt√≠ficos publicadas que ilustram mais sobre o perfil de utiliza√ß√£o de um diab√©tico.
		""")
	
	st.markdown('\n\n')
	st.warning('**Protocolos de utiliza√ß√£o de um paciente de diabetes**', icon="ü©∫")
	st.write(
        """
		```
		Hemoglobina glicada         Se diabetes controlada, a cada 6 meses. Se fora de controle, 3 meses. 
		Microalbumin√∫ria            A cada 6 meses.
		Colesterol total            A cada 12 meses.
		LDL                         A cada 12 meses.
		HDL                         A cada 12 meses.
		Glicose                     A cada 12 meses.
		Creatinina                  A cada 12 meses.
		Triglicer√≠deos              A cada 12 meses.
		Retinografia monocular      A cada 12 meses.

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Procedimentos TUSS**', icon="üî¨")
	st.write(
        """
		```
		40302075	Hemoglobina glicada (a1 total) - pesquisa e/ou dosagem
		40302733	Hemoglobina glicada (fra√ß√£o a1c) - pesquisa e/ou dosagem
		40301150	√Åcido √∫rico - pesquisa e/ou dosagem
		40302580	Ur√©ia - pesquisa e/ou dosagem
		40311171	Microalbumin√∫ria
		40302385	Prote√≠nas totais albumina e globulina - pesquisa e/ou dosagem
		40301630	Creatinina - pesquisa e/ou dosagem
		40302040	Glicose - pesquisa e/ou dosagem
		40301605	Colesterol total - pesquisa e/ou dosagem
		40301591	Colesterol (LDL) - pesquisa e/ou dosagem. Veja como √© f√°cil consultar a Terminologia Unificada da Sa√∫de Suplementar ‚Ä¶
		40302750	Perfil lip√≠dico / lipidograma (l√≠pidios totais, colesterol, triglicer√≠dios e eletroforese lipoprote√≠nas)
		40302032	Glicemia ap√≥s sobrecarga com dextrosol ou glicose - pesquisa e/ou dosagem
		40302024	Gasometria + Hb + Ht + Na + K + Cl + Ca + glicose + lactato (quando efetuado no gas√¥metro) - pesquisa e/ou dosagem
		10101012	Consulta em consult√≥rio (no hor√°rio normal ou preestabelecido)
		10101039	Consulta em pronto socorro
		40814220	TROMBECTOMIA
		40302709	Teste oral de toler√¢ncia √† glicose - 2 dosagens
		41301439	Fundoscopia sob medr√≠ases - binocular
		41301315	Retinografia (s√≥ honor√°rio) monocular

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Grupo por obejetivo de an√°lise**', icon="üî¨")
	st.write(
        """
		```
		Exames de Hemoglobina Glicada	40302075; 40302733
		Exames de Sa√∫de Renal	        40301150; 40302580; 40311171; 40302385; 40301630
		Exames de Colesterol	        40301605; 40301591; 40302750
		Exames de A√ß√∫car no Sangue      40302040

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Gupo por modo de realiza√ß√£o de exames**', icon="üî¨")
	st.write(
        """
		```
		Por Urina                       40301150; 40311171
		Por Coleta de Sangue	        40302075; 40302733; 40302385; 40301630; 40301605; 40301591; 40302750; 40302040
		Por Coleta de Sangue e Urina	40302580

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Subgrupos TUSS**', icon="üî¨")
	st.write(
        """
		```
		Consultas
		Consulta em Pronto Socorro
		REABILITA√á√ïES - SESS√ïES DE PROCEDIMENTOS AMBULATORIAIS
		MONITORIZA√á√ïES AMBULATORIAIS
		AVALIA√á√ïES / ACOMPANHAMENTOS AMBULATORIAIS
		TERAPIA CL√çNICA AMBULATORIAL
		AVALIA√á√ïES / ACOMPANHAMENTOS DE PROCEDIMENTOS CL√çNICOS HOSPITALARES
		MONITORIZA√á√ïES DE PROCEDIMENTOS CL√çNICOS HOSPITALARES
		REABILITA√á√ïES - SESS√ïES DE PROCEDIMENTOS CL√çNICOS HOSPITALARES
		TERAPIA CL√çNICA HOSPITALAR
		BOCA
		NERVOS PERIF√âRICOS
		VAGINA
		RIM, BACINETE E SUPRA-RENAL
		P√ÇNCREAS
		P√â
		PERNA
		TORNOZELO
		CIRURGIA VENOSA
		CIRURGIA ARTERIAL
		ACESSOS VASCULARES
		RENAL
		BIOQU√çMICA
		URIN√ÅLISE
		SISTEMA URIN√ÅRIO

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Grupos TUSS**', icon="üî¨")
	st.write(
        """
		```
		CONSULTAS
		PROCEDIMENTOS CL√çNICOS AMBULATORIAIS
		PROCEDIMENTOS CL√çNICOS HOSPITALARES
		PELE E TECIDO CELULAR SUBCUT√ÇNEO ANEXOS
		OLHOS
		SISTEMA M√öSCULO ESQUEL√âTICO E ARTICULA√á√ïES
		SISTEMA C√ÅRDIO- CIRCULAT√ìRIO
		SISTEMA URIN√ÅRIO
		SISTEMA NERVOSO - CENTRAL E PERIF√âRICO
		MEDICINA LABORATORIAL
		CABE√áA E PESCO√áO
		SISTEMA DIGESTIVO E ANEXOS
		SISTEMA GENITAL E REPRODUTOR FEMININO

		```
		"""
			)
	
	st.markdown('\n\n')
	st.warning('**Fontes**', icon="üìö")
	st.markdown("""
	*"Diabetes was associated with an 87% increase in outpatient visits, a 52% increase in hospital admissions and a 33% increase in accident and emergency department attendances."* \n\n
	‚Ä¢ [Health service utilization and related costs attributable to diabetes](https://sci-hub.se/https://onlinelibrary.wiley.com/doi/10.1111/dme.13806) \n\n \n\n
	*"People with diabetes were less likely to report no emergency department visits in the last year than the general population (70% vs. 80%) "* \n\n
	‚Ä¢ [Health Care Utilization and Costs of Diabetes](https://www.ncbi.nlm.nih.gov/books/NBK567979/) \n\n
	*"Participants with diabetes complications had 2 times higher odds of specialist visit(OR: 2.55; CI: 2.05‚Äì3.16),5 times higher odds of ER visit (OR: 5.63; CI: 3.79‚Äì8.37), and 3 times higher odds of hospitalization (OR: 3.68; CI: 2.84‚Äì4.73) than participants without diabetes complications"* \n\n
	‚Ä¢ [Patient-perceived service needs and health care utilization in people with type 2 diabetes](https://journals.lww.com/md-journal/fulltext/2020/05220/patient_perceived_service_needs_and_health_care.71.aspx)""")



# if st.button('Salvar resposta'):
# 	st.balloons()
# 	st.success('Resposta salva!')



